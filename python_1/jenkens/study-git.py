# _*_ coding:utf-8 _*_
# @Time    :2019/7/2 14:52
# @Author  :xiuhong.guo
# @Email   :892336120@qq.com
# @File    :study-jenkens.py


# 源代码管理工具：git svn 等
# 有个client客户端；提交代码，开发人员提交代码，开发人员的本地就是client客户端；
# 拉取代码，拉取服务端最新的代码
# 有个server服务端：把代码提交到git的服务端，合并代码，并保存各个版本的代码

# 提交代码  拉取代码  合并代码

# git相关内容的地址：https://www.cnblogs.com/smuxiaolei/p/7484678.html

# git：提交全部文件，Git是目前世界上最先进的分布式版本控制系统。
# 1.git add .：git add xx命令可以将xx文件添加到暂存区，如果有很多改动可以通过 git add -A .来一次添加所有改变的文件，
# 注意 -A 选项后面还有一个句点。 git add -A表示添加所有内容， git add . 表示添加新文件和编辑过的文件不包括删除的文件;
# git add -u 表示添加编辑或者删除的文件，不包括新添加的文件
# 2.git commit -m："提交注释"
# 3.git push origin  分支名称：一般使用：git push origin master

# git介绍：
# 1.分布式：Git版本控制系统是一个分布式的系统，是用来保存工程源代码历史状态的命令行工具。
# 2.保存点：Git的保存点可以追踪源码中的文件, 并能得到某一个时间点上的整个工程项目的状态；可以在该保存点将多人提交的源码合并,
# 也可以回退到某一个保存点上。
# 3.Git离线操作性：Git可以离线进行代码提交，因此它称得上是完全的分布式处理，Git所有的操作不需要在线进行；
# 这意味着Git的速度要比SVN等工具快得多，因为SVN等工具需要在线时才能操作，如果网络环境不好， 提交代码会变得非常缓慢。
# 4.Git基于快照：SVN等老式版本控制工具是将提交点保存成补丁文件，Git提交是将提交点指向提交时的项目快照，
# 提交的东西包含一些元数据(作者，日期，GPG等)。
# 5.Git的分支和合并：分支模型是Git最显著的特点，因为这改变了开发者的开发模式，SVN等版本控制工具将每个分支都要放在不同的目录中，
# Git可以在同一个目录中切换不同的分支。
# 6.分支即时性：创建和切换分支几乎是同时进行的，用户可以上传一部分分支，另外一部分分支可以隐藏在本地，
# 不必将所有的分支都上传到GitHub中去。
# 7.分支灵活性：用户可以随时创建、合并、删除分支，多人实现不同的功能，可以创建多个分支进行开发，之后进行分支合并，
# 这种方式使开发变得快速、简单、安全。

# git下载地址:https://git-scm.com/downloads/

# SVN与Git的最主要的区别？
# 1.SVN是集中式版本控制系统，版本库是集中放在中央服务器的，而干活的时候，用的都是自己的电脑，
# 所以首先要从中央服务器哪里得到最新的版本，然后干活，干完后，需要把自己做完的活推送到中央服务器。
# 集中式版本控制系统是必须联网才能工作，如果在局域网还可以，带宽够大，速度够快，如果在互联网下，如果网速慢的话，就纳闷了。
# 2.Git是分布式版本控制系统，那么它就没有中央服务器的，每个人的电脑就是一个完整的版本库，这样，工作的时候就不需要联网了，
# 因为版本都是在自己的电脑上。既然每个人的电脑都有一个完整的版本库，那多个人如何协作呢？比如说自己在电脑上改了文件A，
# 其他人也在电脑上改了文件A，这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。





























